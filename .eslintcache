[{"/home/izzud/Desktop/app/webrtc_mediasoup/src/reportWebVitals.js":"1","/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/home/index.tsx":"2","/home/izzud/Desktop/app/webrtc_mediasoup/src/index.js":"3","/home/izzud/Desktop/app/webrtc_mediasoup/src/App.js":"4","/home/izzud/Desktop/app/webrtc_mediasoup/src/CONTAINER/layout.tsx":"5","/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/broadcast/publish.tsx":"6","/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/broadcast/index.tsx":"7","/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/broadcast/subscribe.tsx":"8","/home/izzud/Desktop/app/webrtc_mediasoup/src/app.config.js":"9"},{"size":362,"mtime":1607107118941,"results":"10","hashOfConfig":"11"},{"size":193,"mtime":1607269336608,"results":"12","hashOfConfig":"11"},{"size":613,"mtime":1607260661652,"results":"13","hashOfConfig":"11"},{"size":578,"mtime":1607268862690,"results":"14","hashOfConfig":"11"},{"size":414,"mtime":1607269297240,"results":"15","hashOfConfig":"11"},{"size":9461,"mtime":1607282637325,"results":"16","hashOfConfig":"11"},{"size":637,"mtime":1607269708194,"results":"17","hashOfConfig":"11"},{"size":10964,"mtime":1607283522551,"results":"18","hashOfConfig":"11"},{"size":102,"mtime":1607269821171,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p767on",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/izzud/Desktop/app/webrtc_mediasoup/src/reportWebVitals.js",[],"/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/home/index.tsx",[],["43","44"],"/home/izzud/Desktop/app/webrtc_mediasoup/src/index.js",[],"/home/izzud/Desktop/app/webrtc_mediasoup/src/App.js",["45","46","47","48"],"import React, { useRef } from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { io as socketIOClient } from 'socket.io-client';\nimport Home from './PAGE/home/index';\nimport Broadcast from './PAGE/broadcast/index';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className='App'>\n            <Switch>\n                <Route path='/' exact component={Home} />\n                <Route path='/broadcast/:view' exact component={Broadcast} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n",["49","50"],"/home/izzud/Desktop/app/webrtc_mediasoup/src/CONTAINER/layout.tsx",["51","52","53"],"import React, { useRef } from 'react';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { isPropertySignature } from 'typescript';\nimport { config } from '../app.config';\n\nfunction Layout(props: any) {\n    React.useEffect(() => {\n        const userSocket: any = socketIOClient(config.SERVER_ENDPOINT);\n    }, []);\n    return <div className='Layout'>{props.children}</div>;\n}\n\nexport default Layout;\n","/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/broadcast/publish.tsx",["54","55","56"],"/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/broadcast/index.tsx",[],"/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/broadcast/subscribe.tsx",["57","58","59","60","61","62","63"],"import React, { Suspense, lazy } from 'react';\nimport { Device } from 'mediasoup-client';\n\nfunction Subscribe(props: any) {\n    const remoteVideo: any = React.useRef();\n    const localStream: any = React.useRef();\n    const clientId: any = React.useRef();\n    const device: any = React.useRef();\n    const consumerTransport: any = React.useRef();\n    const videoConsumer: any = React.useRef();\n    const audioConsumer: any = React.useRef();\n    let socket: any = props.userSocket;\n\n    const [isSubscribed, setIsSubscribe] = React.useState(false);\n\n    // return Promise\n    function playVideo(element: any, stream: any) {\n        if (element.srcObject) {\n            console.warn('element ALREADY playing, so ignore');\n            return;\n        }\n        element.srcObject = stream;\n        element.volume = 0;\n        remoteVideo.current = element;\n        console.log('playVideo');\n        console.log(remoteVideo);\n        return element.play();\n    }\n\n    function pauseVideo(element: any) {\n        element.pause();\n        element.srcObject = null;\n    }\n\n    function addRemoteTrack(id: any, track: any) {\n        let video: any = remoteVideo.current;\n\n        if (video.srcObject) {\n            video.srcObject.addTrack(track);\n            return;\n        }\n\n        const newStream = new MediaStream();\n        newStream.addTrack(track);\n        playVideo(video, newStream)\n            .then(() => {\n                video.volume = 1.0;\n            })\n            .catch((err: any) => {\n                console.error('media ERROR:', err);\n            });\n    }\n\n    // ============ UI button ==========\n\n    async function handleSubscribe() {\n        // if (!isSocketConnected()) {\n        //   await connectSocket().catch(err => {\n        //     console.error(err);\n        //     return;\n        //   });\n\n        // --- get capabilities --\n        const data = await sendRequest('getRouterRtpCapabilities', {});\n        console.log('getRouterRtpCapabilities:', data);\n        await loadDevice(data);\n        // }\n\n        // --- prepare transport ---\n        console.log('--- createConsumerTransport --');\n        const params = await sendRequest('createConsumerTransport', {});\n        console.log('transport params:', params);\n        consumerTransport.current = device.current.createRecvTransport(params);\n        console.log('createConsumerTransport:', consumerTransport);\n\n        // --- NG ---\n        //sendRequest('connectConsumerTransport', { dtlsParameters: dtlsParameters })\n        //  .then(callback)\n        //  .catch(errback);\n\n        // --- try --- not well\n        //sendRequest('connectConsumerTransport', { dtlsParameters: params.dtlsParameters })\n        //  .then(() => console.log('connectConsumerTransport OK'))\n        //  .catch(err => console.error('connectConsumerTransport ERROR:', err));\n\n        // --- join & start publish --\n        consumerTransport.current.on(\n            'connect',\n            async ({ dtlsParameters }: any, callback: any, errback: any) => {\n                console.log('--consumer trasnport connect');\n                sendRequest('connectConsumerTransport', {\n                    dtlsParameters: dtlsParameters,\n                })\n                    .then(callback)\n                    .catch(errback);\n\n                //consumer = await consumeAndResume(consumerTransport);\n            }\n        );\n\n        consumerTransport.current.on('connectionstatechange', (state: any) => {\n            switch (state) {\n                case 'connecting':\n                    console.log('subscribing...');\n                    break;\n\n                case 'connected':\n                    console.log('subscribed');\n                    break;\n\n                case 'failed':\n                    console.log('failed');\n                    consumerTransport.current.close();\n                    break;\n\n                default:\n                    break;\n            }\n        });\n\n        videoConsumer.current = await consumeAndResume(\n            consumerTransport.current,\n            'video'\n        );\n        audioConsumer.current = await consumeAndResume(\n            consumerTransport.current,\n            'audio'\n        );\n    }\n\n    async function consumeAndResume(transport: any, kind: any) {\n        const consumer = await consume(transport, kind);\n        if (consumer) {\n            console.log('-- track exist, consumer ready. kind=' + kind);\n\n            if (kind === 'video') {\n                console.log('-- resume kind=' + kind);\n                sendRequest('resume', { kind: kind })\n                    .then(() => {\n                        console.log('resume OK');\n                        return consumer;\n                    })\n                    .catch((err) => {\n                        console.error('resume ERROR:', err);\n                        return consumer;\n                    });\n            } else {\n                console.log('-- do not resume kind=' + kind);\n            }\n        } else {\n            console.log('-- no consumer yet. kind=' + kind);\n            return null;\n        }\n    }\n\n    function handleDisconnect() {\n        if (videoConsumer.current) {\n            videoConsumer.current.close();\n            videoConsumer.current = null;\n        }\n        if (audioConsumer.current) {\n            audioConsumer.current.close();\n            audioConsumer.current = null;\n        }\n        if (consumerTransport.current) {\n            consumerTransport.current.close();\n            consumerTransport.current = null;\n        }\n\n        // removeAllRemoteVideo();\n\n        disconnectSocket();\n    }\n\n    async function loadDevice(routerRtpCapabilities: any) {\n        try {\n            device.current = new Device();\n        } catch (error) {\n            if (error.name === 'UnsupportedError') {\n                console.error('browser not supported');\n            }\n        }\n        await device.current.load({ routerRtpCapabilities });\n    }\n\n    async function consume(transport: any, trackKind: any) {\n        console.log('--start of consume --kind=' + trackKind);\n        const { rtpCapabilities } = device.current;\n        //const data = await socket.request('consume', { rtpCapabilities });\n        const data = await sendRequest('consume', {\n            rtpCapabilities: rtpCapabilities,\n            kind: trackKind,\n        }).catch((err) => {\n            console.error('consume ERROR:', err);\n        });\n        const { producerId, id, kind, rtpParameters }: any = data;\n\n        if (producerId) {\n            let codecOptions = {};\n            const consumer = await transport.consume({\n                id,\n                producerId,\n                kind,\n                rtpParameters,\n                codecOptions,\n            });\n            //const stream = new MediaStream();\n            //stream.addTrack(consumer.track);\n\n            addRemoteTrack(clientId.current, consumer.track);\n\n            console.log('--end of consume');\n            //return stream;\n\n            return consumer;\n        } else {\n            console.warn('--- remote producer NOT READY');\n\n            return null;\n        }\n    }\n\n    function sendRequest(type: any, data: any) {\n        return new Promise((resolve: any, reject: any) => {\n            socket.emit(type, data, (err: any, response: any) => {\n                if (!err) {\n                    // Success response, so pass the mediasoup response to the local Room.\n                    resolve(response);\n                } else {\n                    reject(err);\n                }\n            });\n        });\n    }\n    function disconnectSocket() {\n        if (socket) {\n            socket.close();\n            socket = null;\n            clientId.current = null;\n            console.log('socket.io closed..');\n        }\n    }\n    React.useEffect(() => {\n        socket.on('message', function (message: any) {\n            console.log('socket.io message:', message);\n            if (message.type === 'welcome') {\n                if (socket.id !== message.id) {\n                    console.warn(\n                        'WARN: something wrong with clientID',\n                        socket.io,\n                        message.id\n                    );\n                }\n\n                clientId.current = message.id;\n                console.log('connected to server. clientId=' + clientId);\n            } else {\n                console.error('UNKNOWN message from server:', message);\n            }\n        });\n        socket.on('newProducer', async function (message: any) {\n            console.log('socket.io newProducer:', message);\n            if (consumerTransport.current) {\n                // start consume\n                if (message.kind === 'video') {\n                    videoConsumer.current = await consumeAndResume(\n                        consumerTransport.current,\n                        message.kind\n                    );\n                } else if (message.kind === 'audio') {\n                    audioConsumer.current = await consumeAndResume(\n                        consumerTransport.current,\n                        message.kind\n                    );\n                }\n            }\n        });\n\n        socket.on('producerClosed', function (message: any) {\n            console.log('socket.io producerClosed:', message);\n            const localId = message.localId;\n            const remoteId = message.remoteId;\n            const kind = message.kind;\n            console.log(\n                '--try removeConsumer remoteId=' +\n                    remoteId +\n                    ', localId=' +\n                    localId +\n                    ', kind=' +\n                    kind\n            );\n            if (kind === 'video') {\n                if (videoConsumer.current) {\n                    videoConsumer.current.close();\n                    videoConsumer.current = null;\n                }\n            } else if (kind === 'audio') {\n                if (audioConsumer.current) {\n                    audioConsumer.current.close();\n                    audioConsumer.current = null;\n                }\n            }\n\n            if (remoteId) {\n                // removeRemoteVideo(remoteId);\n            } else {\n                // removeAllRemoteVideo();\n            }\n        });\n    }, []);\n    return (\n        <div>\n            <button onClick={handleSubscribe}>Subscribe</button>\n            <button onClick={handleDisconnect}>Disconnect</button>\n\n            <div>\n                remote video\n                <br />\n                <div>\n                    <video\n                        ref={remoteVideo}\n                        autoPlay\n                        style={{\n                            width: '240px',\n                            height: '180px',\n                            border: '1px solid black',\n                        }}\n                    ></video>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Subscribe;\n","/home/izzud/Desktop/app/webrtc_mediasoup/src/app.config.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":23},{"ruleId":"68","severity":1,"message":"72","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":12},{"ruleId":"68","severity":1,"message":"73","line":3,"column":25,"nodeType":"70","messageId":"71","endLine":3,"endColumn":33},{"ruleId":"68","severity":1,"message":"74","line":4,"column":16,"nodeType":"70","messageId":"71","endLine":4,"endColumn":30},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"75","severity":1,"message":"69","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":23},{"ruleId":"75","severity":1,"message":"76","line":3,"column":10,"nodeType":"70","messageId":"71","endLine":3,"endColumn":29},{"ruleId":"75","severity":1,"message":"77","line":8,"column":15,"nodeType":"70","messageId":"71","endLine":8,"endColumn":30},{"ruleId":"75","severity":1,"message":"78","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":31},{"ruleId":"80","severity":1,"message":"81","line":257,"column":8,"nodeType":"82","endLine":257,"endColumn":10,"suggestions":"83"},{"ruleId":"75","severity":1,"message":"78","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":31},{"ruleId":"75","severity":1,"message":"84","line":6,"column":11,"nodeType":"70","messageId":"71","endLine":6,"endColumn":27},{"ruleId":"75","severity":1,"message":"85","line":14,"column":12,"nodeType":"70","messageId":"71","endLine":14,"endColumn":24},{"ruleId":"75","severity":1,"message":"86","line":14,"column":26,"nodeType":"70","messageId":"71","endLine":14,"endColumn":40},{"ruleId":"75","severity":1,"message":"87","line":30,"column":14,"nodeType":"70","messageId":"71","endLine":30,"endColumn":24},{"ruleId":"80","severity":1,"message":"88","line":310,"column":8,"nodeType":"82","endLine":310,"endColumn":10,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'Redirect' is defined but never used.","'socketIOClient' is defined but never used.","@typescript-eslint/no-unused-vars","'isPropertySignature' is defined but never used.","'userSocket' is assigned a value but never used.","'Suspense' is defined but never used.","'lazy' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["92"],"'localStream' is assigned a value but never used.","'isSubscribed' is assigned a value but never used.","'setIsSubscribe' is assigned a value but never used.","'pauseVideo' is defined but never used.","React Hook React.useEffect has missing dependencies: 'consumeAndResume' and 'socket'. Either include them or remove the dependency array.",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [socket]",{"range":"98","text":"99"},"Update the dependencies array to be: [consumeAndResume, socket]",{"range":"100","text":"101"},[8264,8266],"[socket]",[10278,10280],"[consumeAndResume, socket]"]